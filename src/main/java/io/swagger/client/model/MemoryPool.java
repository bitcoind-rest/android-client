/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class MemoryPool {
  
  @SerializedName("size")
  private Long size = null;
  @SerializedName("bytes")
  private Long bytes = null;
  @SerializedName("usage")
  private Long usage = null;
  @SerializedName("maxmempool")
  private Long maxmempool = null;
  @SerializedName("mempoolminfee")
  private Float mempoolminfee = null;
  @SerializedName("minrelaytxfee")
  private Float minrelaytxfee = null;

  /**
   * the number of transactions in the TX mempool
   **/
  @ApiModelProperty(value = "the number of transactions in the TX mempool")
  public Long getSize() {
    return size;
  }
  public void setSize(Long size) {
    this.size = size;
  }

  /**
   * size of the TX mempool in bytes
   **/
  @ApiModelProperty(value = "size of the TX mempool in bytes")
  public Long getBytes() {
    return bytes;
  }
  public void setBytes(Long bytes) {
    this.bytes = bytes;
  }

  /**
   * total TX mempool memory usage
   **/
  @ApiModelProperty(value = "total TX mempool memory usage")
  public Long getUsage() {
    return usage;
  }
  public void setUsage(Long usage) {
    this.usage = usage;
  }

  /**
   * maximum memory usage for the mempool in bytes
   **/
  @ApiModelProperty(value = "maximum memory usage for the mempool in bytes")
  public Long getMaxmempool() {
    return maxmempool;
  }
  public void setMaxmempool(Long maxmempool) {
    this.maxmempool = maxmempool;
  }

  /**
   * minimum feerate (BTC per KB) for tx to be accepted
   **/
  @ApiModelProperty(value = "minimum feerate (BTC per KB) for tx to be accepted")
  public Float getMempoolminfee() {
    return mempoolminfee;
  }
  public void setMempoolminfee(Float mempoolminfee) {
    this.mempoolminfee = mempoolminfee;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Float getMinrelaytxfee() {
    return minrelaytxfee;
  }
  public void setMinrelaytxfee(Float minrelaytxfee) {
    this.minrelaytxfee = minrelaytxfee;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemoryPool memoryPool = (MemoryPool) o;
    return (this.size == null ? memoryPool.size == null : this.size.equals(memoryPool.size)) &&
        (this.bytes == null ? memoryPool.bytes == null : this.bytes.equals(memoryPool.bytes)) &&
        (this.usage == null ? memoryPool.usage == null : this.usage.equals(memoryPool.usage)) &&
        (this.maxmempool == null ? memoryPool.maxmempool == null : this.maxmempool.equals(memoryPool.maxmempool)) &&
        (this.mempoolminfee == null ? memoryPool.mempoolminfee == null : this.mempoolminfee.equals(memoryPool.mempoolminfee)) &&
        (this.minrelaytxfee == null ? memoryPool.minrelaytxfee == null : this.minrelaytxfee.equals(memoryPool.minrelaytxfee));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.size == null ? 0: this.size.hashCode());
    result = 31 * result + (this.bytes == null ? 0: this.bytes.hashCode());
    result = 31 * result + (this.usage == null ? 0: this.usage.hashCode());
    result = 31 * result + (this.maxmempool == null ? 0: this.maxmempool.hashCode());
    result = 31 * result + (this.mempoolminfee == null ? 0: this.mempoolminfee.hashCode());
    result = 31 * result + (this.minrelaytxfee == null ? 0: this.minrelaytxfee.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemoryPool {\n");
    
    sb.append("  size: ").append(size).append("\n");
    sb.append("  bytes: ").append(bytes).append("\n");
    sb.append("  usage: ").append(usage).append("\n");
    sb.append("  maxmempool: ").append(maxmempool).append("\n");
    sb.append("  mempoolminfee: ").append(mempoolminfee).append("\n");
    sb.append("  minrelaytxfee: ").append(minrelaytxfee).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
