/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.BIP;
import io.swagger.client.model.ChainInfoBip9Softforks;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ChainInfo {
  
  public enum ChainEnum {
     main,  test,  regtest, 
  };
  @SerializedName("chain")
  private ChainEnum chain = null;
  @SerializedName("blocks")
  private Long blocks = null;
  @SerializedName("headers")
  private Long headers = null;
  @SerializedName("bestblockhash")
  private String bestblockhash = null;
  @SerializedName("difficulty")
  private Long difficulty = null;
  @SerializedName("mediantime")
  private Integer mediantime = null;
  @SerializedName("verificationprogress")
  private Integer verificationprogress = null;
  @SerializedName("initialblockdownload")
  private Boolean initialblockdownload = null;
  @SerializedName("chainwork")
  private String chainwork = null;
  @SerializedName("size_on_disk")
  private Long sizeOnDisk = null;
  @SerializedName("pruned")
  private Boolean pruned = null;
  @SerializedName("softforks")
  private List<BIP> softforks = null;
  @SerializedName("bip9_softforks")
  private ChainInfoBip9Softforks bip9Softforks = null;
  @SerializedName("warnings")
  private String warnings = null;

  /**
   * Current network name as defined in BIP70 (main, test, regtest)
   **/
  @ApiModelProperty(value = "Current network name as defined in BIP70 (main, test, regtest)")
  public ChainEnum getChain() {
    return chain;
  }
  public void setChain(ChainEnum chain) {
    this.chain = chain;
  }

  /**
   * The current number of blocks processed in the server
   **/
  @ApiModelProperty(value = "The current number of blocks processed in the server")
  public Long getBlocks() {
    return blocks;
  }
  public void setBlocks(Long blocks) {
    this.blocks = blocks;
  }

  /**
   * The current number of headers we have validated
   **/
  @ApiModelProperty(value = "The current number of headers we have validated")
  public Long getHeaders() {
    return headers;
  }
  public void setHeaders(Long headers) {
    this.headers = headers;
  }

  /**
   * The hash of the currently best block
   **/
  @ApiModelProperty(value = "The hash of the currently best block")
  public String getBestblockhash() {
    return bestblockhash;
  }
  public void setBestblockhash(String bestblockhash) {
    this.bestblockhash = bestblockhash;
  }

  /**
   * The current difficulty
   **/
  @ApiModelProperty(value = "The current difficulty")
  public Long getDifficulty() {
    return difficulty;
  }
  public void setDifficulty(Long difficulty) {
    this.difficulty = difficulty;
  }

  /**
   * The median time of the 11 blocks before the most recent block on the blockchain
   **/
  @ApiModelProperty(value = "The median time of the 11 blocks before the most recent block on the blockchain")
  public Integer getMediantime() {
    return mediantime;
  }
  public void setMediantime(Integer mediantime) {
    this.mediantime = mediantime;
  }

  /**
   * Estimate of verification progress [0..1]
   **/
  @ApiModelProperty(value = "Estimate of verification progress [0..1]")
  public Integer getVerificationprogress() {
    return verificationprogress;
  }
  public void setVerificationprogress(Integer verificationprogress) {
    this.verificationprogress = verificationprogress;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getInitialblockdownload() {
    return initialblockdownload;
  }
  public void setInitialblockdownload(Boolean initialblockdownload) {
    this.initialblockdownload = initialblockdownload;
  }

  /**
   * Total amount of work in active chain, in hexadecimal
   **/
  @ApiModelProperty(value = "Total amount of work in active chain, in hexadecimal")
  public String getChainwork() {
    return chainwork;
  }
  public void setChainwork(String chainwork) {
    this.chainwork = chainwork;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getSizeOnDisk() {
    return sizeOnDisk;
  }
  public void setSizeOnDisk(Long sizeOnDisk) {
    this.sizeOnDisk = sizeOnDisk;
  }

  /**
   * If the blocks are subject to pruning
   **/
  @ApiModelProperty(value = "If the blocks are subject to pruning")
  public Boolean getPruned() {
    return pruned;
  }
  public void setPruned(Boolean pruned) {
    this.pruned = pruned;
  }

  /**
   * status of softforks in progress
   **/
  @ApiModelProperty(value = "status of softforks in progress")
  public List<BIP> getSoftforks() {
    return softforks;
  }
  public void setSoftforks(List<BIP> softforks) {
    this.softforks = softforks;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ChainInfoBip9Softforks getBip9Softforks() {
    return bip9Softforks;
  }
  public void setBip9Softforks(ChainInfoBip9Softforks bip9Softforks) {
    this.bip9Softforks = bip9Softforks;
  }

  /**
   * An eventual warning on the current build status.
   **/
  @ApiModelProperty(value = "An eventual warning on the current build status.")
  public String getWarnings() {
    return warnings;
  }
  public void setWarnings(String warnings) {
    this.warnings = warnings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChainInfo chainInfo = (ChainInfo) o;
    return (this.chain == null ? chainInfo.chain == null : this.chain.equals(chainInfo.chain)) &&
        (this.blocks == null ? chainInfo.blocks == null : this.blocks.equals(chainInfo.blocks)) &&
        (this.headers == null ? chainInfo.headers == null : this.headers.equals(chainInfo.headers)) &&
        (this.bestblockhash == null ? chainInfo.bestblockhash == null : this.bestblockhash.equals(chainInfo.bestblockhash)) &&
        (this.difficulty == null ? chainInfo.difficulty == null : this.difficulty.equals(chainInfo.difficulty)) &&
        (this.mediantime == null ? chainInfo.mediantime == null : this.mediantime.equals(chainInfo.mediantime)) &&
        (this.verificationprogress == null ? chainInfo.verificationprogress == null : this.verificationprogress.equals(chainInfo.verificationprogress)) &&
        (this.initialblockdownload == null ? chainInfo.initialblockdownload == null : this.initialblockdownload.equals(chainInfo.initialblockdownload)) &&
        (this.chainwork == null ? chainInfo.chainwork == null : this.chainwork.equals(chainInfo.chainwork)) &&
        (this.sizeOnDisk == null ? chainInfo.sizeOnDisk == null : this.sizeOnDisk.equals(chainInfo.sizeOnDisk)) &&
        (this.pruned == null ? chainInfo.pruned == null : this.pruned.equals(chainInfo.pruned)) &&
        (this.softforks == null ? chainInfo.softforks == null : this.softforks.equals(chainInfo.softforks)) &&
        (this.bip9Softforks == null ? chainInfo.bip9Softforks == null : this.bip9Softforks.equals(chainInfo.bip9Softforks)) &&
        (this.warnings == null ? chainInfo.warnings == null : this.warnings.equals(chainInfo.warnings));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.chain == null ? 0: this.chain.hashCode());
    result = 31 * result + (this.blocks == null ? 0: this.blocks.hashCode());
    result = 31 * result + (this.headers == null ? 0: this.headers.hashCode());
    result = 31 * result + (this.bestblockhash == null ? 0: this.bestblockhash.hashCode());
    result = 31 * result + (this.difficulty == null ? 0: this.difficulty.hashCode());
    result = 31 * result + (this.mediantime == null ? 0: this.mediantime.hashCode());
    result = 31 * result + (this.verificationprogress == null ? 0: this.verificationprogress.hashCode());
    result = 31 * result + (this.initialblockdownload == null ? 0: this.initialblockdownload.hashCode());
    result = 31 * result + (this.chainwork == null ? 0: this.chainwork.hashCode());
    result = 31 * result + (this.sizeOnDisk == null ? 0: this.sizeOnDisk.hashCode());
    result = 31 * result + (this.pruned == null ? 0: this.pruned.hashCode());
    result = 31 * result + (this.softforks == null ? 0: this.softforks.hashCode());
    result = 31 * result + (this.bip9Softforks == null ? 0: this.bip9Softforks.hashCode());
    result = 31 * result + (this.warnings == null ? 0: this.warnings.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChainInfo {\n");
    
    sb.append("  chain: ").append(chain).append("\n");
    sb.append("  blocks: ").append(blocks).append("\n");
    sb.append("  headers: ").append(headers).append("\n");
    sb.append("  bestblockhash: ").append(bestblockhash).append("\n");
    sb.append("  difficulty: ").append(difficulty).append("\n");
    sb.append("  mediantime: ").append(mediantime).append("\n");
    sb.append("  verificationprogress: ").append(verificationprogress).append("\n");
    sb.append("  initialblockdownload: ").append(initialblockdownload).append("\n");
    sb.append("  chainwork: ").append(chainwork).append("\n");
    sb.append("  sizeOnDisk: ").append(sizeOnDisk).append("\n");
    sb.append("  pruned: ").append(pruned).append("\n");
    sb.append("  softforks: ").append(softforks).append("\n");
    sb.append("  bip9Softforks: ").append(bip9Softforks).append("\n");
    sb.append("  warnings: ").append(warnings).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
