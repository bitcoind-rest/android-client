/**
 * Bitcoind
 * The REST API can be enabled with the `-rest` option. The interface runs on the same port as the JSON-RPC interface, by default port `8332` for **mainnet**, port `18332` for **testnet**, and port `18443` for **regtest**.
 *
 * OpenAPI spec version: 0.16
 * Contact: johan@lepetitbloc.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BIP9 {
  
  public enum StatusEnum {
     defined,  started,  locked_in,  active,  failed, 
  };
  @SerializedName("status")
  private StatusEnum status = null;
  @SerializedName("startTime")
  private Long startTime = null;
  @SerializedName("timeout")
  private Long timeout = null;
  @SerializedName("since")
  private Long since = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  /**
   * The starttime specifies a minimum median time past of a block at which the bit gains its meaning.
   **/
  @ApiModelProperty(value = "The starttime specifies a minimum median time past of a block at which the bit gains its meaning.")
  public Long getStartTime() {
    return startTime;
  }
  public void setStartTime(Long startTime) {
    this.startTime = startTime;
  }

  /**
   * The timeout specifies a time at which the deployment is considered failed. If the median time past of a block >= timeout and the soft fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.
   **/
  @ApiModelProperty(value = "The timeout specifies a time at which the deployment is considered failed. If the median time past of a block >= timeout and the soft fork has not yet locked in (including this block's bit state), the deployment is considered failed on all descendants of the block.")
  public Long getTimeout() {
    return timeout;
  }
  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getSince() {
    return since;
  }
  public void setSince(Long since) {
    this.since = since;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BIP9 bIP9 = (BIP9) o;
    return (this.status == null ? bIP9.status == null : this.status.equals(bIP9.status)) &&
        (this.startTime == null ? bIP9.startTime == null : this.startTime.equals(bIP9.startTime)) &&
        (this.timeout == null ? bIP9.timeout == null : this.timeout.equals(bIP9.timeout)) &&
        (this.since == null ? bIP9.since == null : this.since.equals(bIP9.since));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.startTime == null ? 0: this.startTime.hashCode());
    result = 31 * result + (this.timeout == null ? 0: this.timeout.hashCode());
    result = 31 * result + (this.since == null ? 0: this.since.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BIP9 {\n");
    
    sb.append("  status: ").append(status).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  timeout: ").append(timeout).append("\n");
    sb.append("  since: ").append(since).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
